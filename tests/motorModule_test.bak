
#include "motorModule.h"
#include "config.h"

#include <chrono> // For time in ms
#include <thread> // For sleeping
#include <cstdint> // for uint16_t
#include <iostream>
#include <iomanip>
#include "esp_log.h"
#include <cmath>


extern "C" void app_main(){

    Pca9548aParams pca9548aParams = {I2C_SCL_PIN, I2C_SDA_PIN, PCA9548A_SLAVE_ADDR, I2C_FREQ, I2C_NUM_0};
    PCA9548A pca9548a(pca9548aParams);

    MotorParams params1;
    params1.pca9548a = &pca9548a;
    params1.pca9548aPort = PCA9548A_PORT_2;
    params1.as5600Config = AS5600_CONF;
    params1.bitMask = J2S_BIT_MASK;
    params1.dirPin = J2S_PIN_DIR;
    params1.stepPin = J2S_PIN_STEP;

    MotorParams params2;
    params2.pca9548a = &pca9548a;
    params2.pca9548aPort = PCA9548A_PORT_6;
    params2.as5600Config = AS5600_CONF;
    params2.bitMask = J6S_BIT_MASK;
    params2.dirPin = J6S_PIN_DIR;
    params2.stepPin = J6S_PIN_STEP;

    MotorModule motor1(params1);
    MotorModule motor2(params2);

    motor1.setAngle(0.0f, STEPPER_SPEED);
    // motor1.setAngle(90.0f, STEPPER_SPEED);
    // motor1.setAngle(180.0f, STEPPER_SPEED);
    // motor1.setAngle(270.0f, STEPPER_SPEED);

    motor1.setAngle(360.0f, STEPPER_SPEED);
    // motor1.setAngle(270.0f, STEPPER_SPEED);
    // motor1.setAngle(180.0f, STEPPER_SPEED);
    // motor1.setAngle(90.0f, STEPPER_SPEED);

    motor1.setAngle(0.0f, STEPPER_SPEED);
    // motor1.setAngle(90.0f, STEPPER_SPEED);
    // motor1.setAngle(180.0f, STEPPER_SPEED);
    motor1.setAngle(270.0f, STEPPER_SPEED - 150.0f);
    
    while(true){
        std::this_thread::sleep_for(std::chrono::milliseconds(5000));
    }

}